[DEBUG] 2020-02-17 13:57:26.932 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-17 13:57:26.935 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-17 13:57:26.941 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-17 13:57:27.037 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-17 13:57:27.039 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-17 13:57:27.314 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-17 13:57:27.712 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-17 13:57:27.745 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-17 13:57:27.748 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-17 13:57:27.775 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-17 13:57:27.829 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ea20731
[DEBUG] 2020-02-17 13:57:27.830 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ea20731
[DEBUG] 2020-02-17 13:57:27.830 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ea20731
[DEBUG] 2020-02-17 13:57:27.830 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@502c6d82
[DEBUG] 2020-02-17 13:57:27.831 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3ea98624
[DEBUG] 2020-02-17 13:57:27.831 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b295643
[DEBUG] 2020-02-17 13:57:27.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4916d3e5
[DEBUG] 2020-02-17 13:57:27.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4916d3e5
[DEBUG] 2020-02-17 13:57:27.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4916d3e5
[DEBUG] 2020-02-17 13:57:27.834 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@603002d2
[DEBUG] 2020-02-17 13:57:27.834 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@603002d2
[DEBUG] 2020-02-17 13:57:27.834 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@603002d2
[DEBUG] 2020-02-17 13:57:27.835 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1a77f441
[DEBUG] 2020-02-17 13:57:27.835 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1a77f441
[DEBUG] 2020-02-17 13:57:27.835 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1a77f441
[DEBUG] 2020-02-17 13:57:27.836 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@43854193
[DEBUG] 2020-02-17 13:57:27.836 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@43854193
[DEBUG] 2020-02-17 13:57:27.836 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43854193
[DEBUG] 2020-02-17 13:57:27.838 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7cfd72b7
[DEBUG] 2020-02-17 13:57:27.838 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7cfd72b7
[DEBUG] 2020-02-17 13:57:27.838 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7cfd72b7
[DEBUG] 2020-02-17 13:57:27.839 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27c69217
[DEBUG] 2020-02-17 13:57:27.839 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27c69217
[DEBUG] 2020-02-17 13:57:27.839 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27c69217
[DEBUG] 2020-02-17 13:57:27.840 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fef4100
[DEBUG] 2020-02-17 13:57:27.840 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fef4100
[DEBUG] 2020-02-17 13:57:27.840 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fef4100
[DEBUG] 2020-02-17 13:57:27.841 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4c6cd
[DEBUG] 2020-02-17 13:57:27.841 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4c6cd
[DEBUG] 2020-02-17 13:57:27.842 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7037cdd0
[DEBUG] 2020-02-17 13:57:27.842 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7037cdd0
[DEBUG] 2020-02-17 13:57:27.843 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@282db4b5
[DEBUG] 2020-02-17 13:57:27.843 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@282db4b5
[DEBUG] 2020-02-17 13:57:27.844 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@280aaf28
[DEBUG] 2020-02-17 13:57:27.844 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32fae874
[DEBUG] 2020-02-17 13:57:27.845 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@50d986f3
[DEBUG] 2020-02-17 13:57:27.845 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@50d986f3
[DEBUG] 2020-02-17 13:57:27.846 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@544b38f5
[DEBUG] 2020-02-17 13:57:27.846 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@544b38f5
[DEBUG] 2020-02-17 13:57:27.856 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@30deb473
[DEBUG] 2020-02-17 13:57:27.856 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30deb473
[DEBUG] 2020-02-17 13:57:27.857 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@a06e4a1
[DEBUG] 2020-02-17 13:57:27.858 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@a06e4a1
[DEBUG] 2020-02-17 13:57:27.858 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@29dff846
[DEBUG] 2020-02-17 13:57:27.859 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@29dff846
[DEBUG] 2020-02-17 13:57:27.861 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@364bbf30
[DEBUG] 2020-02-17 13:57:27.862 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@364bbf30
[DEBUG] 2020-02-17 13:57:27.863 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e5185ed
[DEBUG] 2020-02-17 13:57:27.863 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e5185ed
[DEBUG] 2020-02-17 13:57:27.865 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49528f9f
[DEBUG] 2020-02-17 13:57:27.865 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49528f9f
[DEBUG] 2020-02-17 13:57:27.867 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@681c24db
[DEBUG] 2020-02-17 13:57:27.867 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@681c24db
[DEBUG] 2020-02-17 13:57:27.868 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@66779262
[DEBUG] 2020-02-17 13:57:27.868 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66779262
[DEBUG] 2020-02-17 13:57:27.869 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3a29a375
[DEBUG] 2020-02-17 13:57:27.870 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a29a375
[DEBUG] 2020-02-17 13:57:27.871 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@42475875
[DEBUG] 2020-02-17 13:57:27.871 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42475875
[DEBUG] 2020-02-17 13:57:27.871 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42475875
[DEBUG] 2020-02-17 13:57:27.873 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fcccb1c
[DEBUG] 2020-02-17 13:57:27.874 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@21ef77eb
[DEBUG] 2020-02-17 13:57:27.874 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21ef77eb
[DEBUG] 2020-02-17 13:57:27.874 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21ef77eb
[DEBUG] 2020-02-17 13:57:27.874 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@42fe9082
[DEBUG] 2020-02-17 13:57:27.875 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@287f1d0c
[DEBUG] 2020-02-17 13:57:27.876 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@287f1d0c
[DEBUG] 2020-02-17 13:57:27.879 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@69b41548
[DEBUG] 2020-02-17 13:57:27.879 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@69b41548
[DEBUG] 2020-02-17 13:57:27.880 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@42005a06
[DEBUG] 2020-02-17 13:57:27.880 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42005a06
[DEBUG] 2020-02-17 13:57:27.881 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3bb760b6
[DEBUG] 2020-02-17 13:57:27.881 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3bb760b6
[DEBUG] 2020-02-17 13:57:27.881 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73d1075c
[DEBUG] 2020-02-17 13:57:27.882 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73d1075c
[DEBUG] 2020-02-17 13:57:27.882 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5bd344ae
[DEBUG] 2020-02-17 13:57:27.883 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@22cb3c59
[DEBUG] 2020-02-17 13:57:27.883 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@22cb3c59
[DEBUG] 2020-02-17 13:57:27.883 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@22cb3c59
[DEBUG] 2020-02-17 13:57:27.884 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d963693
[DEBUG] 2020-02-17 13:57:27.884 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d963693
[DEBUG] 2020-02-17 13:57:27.884 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d963693
[DEBUG] 2020-02-17 13:57:27.885 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@10c3ed69
[DEBUG] 2020-02-17 13:57:27.886 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3a0afdea
[DEBUG] 2020-02-17 13:57:27.887 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@248f37ef
[DEBUG] 2020-02-17 13:57:27.887 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@248f37ef
[DEBUG] 2020-02-17 13:57:27.887 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@248f37ef
[DEBUG] 2020-02-17 13:57:27.888 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3537fbcb
[DEBUG] 2020-02-17 13:57:27.888 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3537fbcb
[DEBUG] 2020-02-17 13:57:27.888 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3537fbcb
[DEBUG] 2020-02-17 13:57:27.888 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7cbb97b3
[DEBUG] 2020-02-17 13:57:27.889 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@25b1b300
[DEBUG] 2020-02-17 13:57:27.891 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@669c261c
[DEBUG] 2020-02-17 13:57:27.891 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@669c261c
[DEBUG] 2020-02-17 13:57:27.891 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21f67eb7
[DEBUG] 2020-02-17 13:57:27.893 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@53b1e455
[DEBUG] 2020-02-17 13:57:27.893 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53b1e455
[DEBUG] 2020-02-17 13:57:27.895 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@95baab9
[DEBUG] 2020-02-17 13:57:27.895 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@95baab9
[DEBUG] 2020-02-17 13:57:27.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54969e7
[DEBUG] 2020-02-17 13:57:27.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cd3c4c1
[DEBUG] 2020-02-17 13:57:27.898 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@70adc508
[DEBUG] 2020-02-17 13:57:27.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3890cd7
[DEBUG] 2020-02-17 13:57:27.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3890cd7
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15efe885
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29c0b7b9
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75796369
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@767037b9
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c314232
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30604372
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e3c0c3c
[DEBUG] 2020-02-17 13:57:27.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79863fbd
[DEBUG] 2020-02-17 13:57:27.938 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-17 13:57:27.938 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-17 13:57:27.939 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-17 13:57:27.939 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-17 13:57:27.940 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-17 13:57:27.941 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-17 13:57:27.941 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-17 13:57:27.944 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-17 13:57:27.945 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-17 13:57:27.946 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-17 13:57:27.947 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-17 13:57:27.947 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-17 13:57:27.948 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-17 13:57:27.949 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-17 13:57:27.955 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookshelfBanshee
[INFO ] 2020-02-17 13:57:27.956 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-17 13:57:27.956 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-17 13:57:28.109 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-17 13:57:28.822 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-17 13:57:28.834 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-17 13:57:28.835 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-17 13:57:28.916 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-17 13:57:28.942 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-17 13:57:29.013 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-17 13:57:29.073 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-17 13:57:29.078 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@591c971a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16687820]
[DEBUG] 2020-02-17 13:57:29.159 [http-nio-8080-exec-2] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.bookshelfBanshee.entity.Role]; ignoring
[DEBUG] 2020-02-17 13:57:29.182 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 13:57:29.217 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-17 13:57:29.227 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-02-17 13:57:29.231 [http-nio-8080-exec-2] EntityBinder - Bind entity com.bookshelfBanshee.entity.User on table user
[DEBUG] 2020-02-17 13:57:29.267 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 13:57:29.271 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-17 13:57:29.273 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:id]
[DEBUG] 2020-02-17 13:57:29.276 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-17 13:57:29.280 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-02-17 13:57:29.285 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-17 13:57:29.287 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 13:57:29.287 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-17 13:57:29.287 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:password]
[DEBUG] 2020-02-17 13:57:29.287 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-17 13:57:29.287 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-02-17 13:57:29.288 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 13:57:29.288 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-17 13:57:29.288 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:username]
[DEBUG] 2020-02-17 13:57:29.289 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-17 13:57:29.289 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-02-17 13:57:29.296 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-17 13:57:29.297 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-17 13:57:29.297 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-17 13:57:29.299 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-02-17 13:57:29.373 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-17 13:57:29.374 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-02-17 13:57:29.374 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-17 13:57:29.374 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-17 13:57:29.374 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-02-17 13:57:29.374 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-17 13:57:29.376 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-17 13:57:29.376 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-17 13:57:29.376 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-17 13:57:29.378 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-17 13:57:29.378 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-17 13:57:29.378 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-17 13:57:29.379 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-02-17 13:57:29.379 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-17 13:57:29.379 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-17 13:57:29.380 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-17 13:57:29.380 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-17 13:57:29.380 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-17 13:57:29.381 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-17 13:57:29.382 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-17 13:57:29.483 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-17 13:57:29.516 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-17 13:57:29.516 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_bookshelfBanshee/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_bookshelfBanshee/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_bookshelfBanshee, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_bookshelfBanshee/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookshelfBanshee, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_bookshelfBanshee, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16a516b9, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BookshelfBanshee, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-17 13:57:29.547 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.bookshelfBanshee.entity.User] is safe
[DEBUG] 2020-02-17 13:57:29.547 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 13:57:29.570 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-17 13:57:29.571 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-17 13:57:29.571 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@591c971a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b6bbd0d]
[DEBUG] 2020-02-17 13:57:29.644 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.bookshelfBanshee.entity.User] is safe
[DEBUG] 2020-02-17 13:57:29.645 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 13:57:29.670 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.bookshelfBanshee.entity.User] is safe
[DEBUG] 2020-02-17 13:57:29.670 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.id, user_.password as password2_0_, user_.username as username3_0_ from user user_ where user_.id=?
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into user (password, username, id) values (?, ?, ?)
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update user set password=?, username=? where id=?
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-02-17 13:57:29.942 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into user (password, username) values (?, ?)
[DEBUG] 2020-02-17 13:57:29.982 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268c6d09]
[DEBUG] 2020-02-17 13:57:29.983 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-17 13:57:29.984 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-17 13:57:29.984 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-17 13:57:29.997 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-17 13:57:30.003 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.bookshelfBanshee.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.bookshelfBanshee.entity.User, querySpaceUid=<gen:0>, path=com.bookshelfBanshee.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bookshelfBanshee.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-17 13:57:30.005 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.bookshelfBanshee.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 13:57:30.006 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b676126]
[DEBUG] 2020-02-17 13:57:30.006 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-17 13:57:30.006 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-17 13:57:30.006 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-17 13:57:30.006 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-17 13:57:30.007 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.bookshelfBanshee.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.bookshelfBanshee.entity.User, querySpaceUid=<gen:0>, path=com.bookshelfBanshee.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bookshelfBanshee.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-17 13:57:30.008 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.bookshelfBanshee.entity.User [READ]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 13:57:30.025 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.bookshelfBanshee.entity.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 13:57:30.025 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.bookshelfBanshee.entity.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 13:57:30.089 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-17 13:57:30.090 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-17 13:57:30.094 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-17 13:57:30.116 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-17 13:57:30.116 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-17 13:57:30.118 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-17 13:57:30.118 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-17 13:57:30.122 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e7d7b
[DEBUG] 2020-02-17 13:57:30.130 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: f2a74b2f-3b3a-44b7-8ecc-12cbf16647b1 (<unnamed>)
[DEBUG] 2020-02-17 13:57:30.133 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-17 13:57:30.247 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-17 13:57:30.287 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-17 13:57:30.307 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a394b3f
[DEBUG] 2020-02-17 13:57:30.356 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.bookshelfBanshee.entity.User as generatedAlias0
[DEBUG] 2020-02-17 13:57:30.369 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 13:57:30.418 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'bookshelfBanshee'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-17 13:57:30.463 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-17 13:57:30.481 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : com.bookshelfBanshee.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-17 13:57:30.482 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-17 13:57:30.484 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-17 13:57:30.484 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-02-17 13:57:30.498 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-02-17 13:57:30.499 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-17 13:57:30.500 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=com.bookshelfBanshee.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_0_, user0_.username as username3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.bookshelfBanshee.entity.User}}

[DEBUG] 2020-02-17 13:57:30.501 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 13:57:30.514 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from com.bookshelfBanshee.entity.User as generatedAlias0
[DEBUG] 2020-02-17 13:57:30.514 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 13:57:30.514 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 13:57:30.536 [http-nio-8080-exec-2] SQL - select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 13:57:30.583 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-17 13:57:30.588 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 13:57:30.595 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-02-17 13:57:30.595 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 13:57:30.595 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-02-17 13:57:30.595 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 13:57:30.596 [http-nio-8080-exec-2] Loader - Result set row: 3
[DEBUG] 2020-02-17 13:57:30.596 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 13:57:30.596 [http-nio-8080-exec-2] Loader - Result set row: 4
[DEBUG] 2020-02-17 13:57:30.596 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 13:57:30.601 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 13:57:30.602 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 13:57:30.602 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.602 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 13:57:30.602 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = secure
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.603 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = user
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = user2
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = me
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = encrypt
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 13:57:30.604 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 13:57:30.607 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
