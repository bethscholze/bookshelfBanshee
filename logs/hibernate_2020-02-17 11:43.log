[DEBUG] 2020-02-17 11:43:25.463 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-17 11:43:25.465 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-17 11:43:25.470 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-17 11:43:25.543 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-17 11:43:25.545 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-17 11:43:25.772 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-17 11:43:26.084 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-17 11:43:26.105 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-17 11:43:26.106 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-17 11:43:26.123 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-17 11:43:26.152 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1846579f
[DEBUG] 2020-02-17 11:43:26.152 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1846579f
[DEBUG] 2020-02-17 11:43:26.152 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1846579f
[DEBUG] 2020-02-17 11:43:26.153 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fac521d
[DEBUG] 2020-02-17 11:43:26.153 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3abfe845
[DEBUG] 2020-02-17 11:43:26.154 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7f08caf
[DEBUG] 2020-02-17 11:43:26.155 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40e60ece
[DEBUG] 2020-02-17 11:43:26.155 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@40e60ece
[DEBUG] 2020-02-17 11:43:26.155 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40e60ece
[DEBUG] 2020-02-17 11:43:26.156 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4893b344
[DEBUG] 2020-02-17 11:43:26.156 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4893b344
[DEBUG] 2020-02-17 11:43:26.157 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4893b344
[DEBUG] 2020-02-17 11:43:26.158 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@51b35e4e
[DEBUG] 2020-02-17 11:43:26.158 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@51b35e4e
[DEBUG] 2020-02-17 11:43:26.158 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51b35e4e
[DEBUG] 2020-02-17 11:43:26.159 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@62db0521
[DEBUG] 2020-02-17 11:43:26.161 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@62db0521
[DEBUG] 2020-02-17 11:43:26.161 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62db0521
[DEBUG] 2020-02-17 11:43:26.162 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7be3a9ce
[DEBUG] 2020-02-17 11:43:26.163 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7be3a9ce
[DEBUG] 2020-02-17 11:43:26.163 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7be3a9ce
[DEBUG] 2020-02-17 11:43:26.164 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b59501e
[DEBUG] 2020-02-17 11:43:26.164 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b59501e
[DEBUG] 2020-02-17 11:43:26.165 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b59501e
[DEBUG] 2020-02-17 11:43:26.166 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@153cd6bb
[DEBUG] 2020-02-17 11:43:26.167 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@153cd6bb
[DEBUG] 2020-02-17 11:43:26.167 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@153cd6bb
[DEBUG] 2020-02-17 11:43:26.168 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6428591a
[DEBUG] 2020-02-17 11:43:26.168 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6428591a
[DEBUG] 2020-02-17 11:43:26.170 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d540566
[DEBUG] 2020-02-17 11:43:26.170 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d540566
[DEBUG] 2020-02-17 11:43:26.171 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@28c86134
[DEBUG] 2020-02-17 11:43:26.172 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@28c86134
[DEBUG] 2020-02-17 11:43:26.172 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c1f6d57
[DEBUG] 2020-02-17 11:43:26.173 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5cb5bb88
[DEBUG] 2020-02-17 11:43:26.174 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3a01773b
[DEBUG] 2020-02-17 11:43:26.175 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a01773b
[DEBUG] 2020-02-17 11:43:26.176 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@472698d
[DEBUG] 2020-02-17 11:43:26.176 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@472698d
[DEBUG] 2020-02-17 11:43:26.185 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@288214b1
[DEBUG] 2020-02-17 11:43:26.186 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@288214b1
[DEBUG] 2020-02-17 11:43:26.188 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58cf8f94
[DEBUG] 2020-02-17 11:43:26.188 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58cf8f94
[DEBUG] 2020-02-17 11:43:26.190 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@fabb651
[DEBUG] 2020-02-17 11:43:26.190 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@fabb651
[DEBUG] 2020-02-17 11:43:26.191 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3872bc37
[DEBUG] 2020-02-17 11:43:26.191 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3872bc37
[DEBUG] 2020-02-17 11:43:26.193 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c518474
[DEBUG] 2020-02-17 11:43:26.193 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c518474
[DEBUG] 2020-02-17 11:43:26.195 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9e2ad91
[DEBUG] 2020-02-17 11:43:26.195 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9e2ad91
[DEBUG] 2020-02-17 11:43:26.197 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74dbb1ee
[DEBUG] 2020-02-17 11:43:26.197 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74dbb1ee
[DEBUG] 2020-02-17 11:43:26.198 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4867ab9f
[DEBUG] 2020-02-17 11:43:26.198 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4867ab9f
[DEBUG] 2020-02-17 11:43:26.200 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@38fc5554
[DEBUG] 2020-02-17 11:43:26.200 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38fc5554
[DEBUG] 2020-02-17 11:43:26.200 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@222afc67
[DEBUG] 2020-02-17 11:43:26.201 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@222afc67
[DEBUG] 2020-02-17 11:43:26.201 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@222afc67
[DEBUG] 2020-02-17 11:43:26.201 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@149debbb
[DEBUG] 2020-02-17 11:43:26.202 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@43b40233
[DEBUG] 2020-02-17 11:43:26.202 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43b40233
[DEBUG] 2020-02-17 11:43:26.202 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43b40233
[DEBUG] 2020-02-17 11:43:26.203 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d199c68
[DEBUG] 2020-02-17 11:43:26.204 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5633dafd
[DEBUG] 2020-02-17 11:43:26.204 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5633dafd
[DEBUG] 2020-02-17 11:43:26.205 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@408e96d9
[DEBUG] 2020-02-17 11:43:26.205 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408e96d9
[DEBUG] 2020-02-17 11:43:26.206 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71ad3d8a
[DEBUG] 2020-02-17 11:43:26.206 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71ad3d8a
[DEBUG] 2020-02-17 11:43:26.207 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3724b43e
[DEBUG] 2020-02-17 11:43:26.207 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3724b43e
[DEBUG] 2020-02-17 11:43:26.208 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@81b5db0
[DEBUG] 2020-02-17 11:43:26.208 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@81b5db0
[DEBUG] 2020-02-17 11:43:26.209 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b3fe06e
[DEBUG] 2020-02-17 11:43:26.210 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6778aea6
[DEBUG] 2020-02-17 11:43:26.210 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6778aea6
[DEBUG] 2020-02-17 11:43:26.210 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6778aea6
[DEBUG] 2020-02-17 11:43:26.214 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@332820f4
[DEBUG] 2020-02-17 11:43:26.214 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@332820f4
[DEBUG] 2020-02-17 11:43:26.214 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@332820f4
[DEBUG] 2020-02-17 11:43:26.215 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@84487f4
[DEBUG] 2020-02-17 11:43:26.215 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1290c49
[DEBUG] 2020-02-17 11:43:26.215 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6ba7383d
[DEBUG] 2020-02-17 11:43:26.216 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ba7383d
[DEBUG] 2020-02-17 11:43:26.216 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6ba7383d
[DEBUG] 2020-02-17 11:43:26.216 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b9776f5
[DEBUG] 2020-02-17 11:43:26.217 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b9776f5
[DEBUG] 2020-02-17 11:43:26.217 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b9776f5
[DEBUG] 2020-02-17 11:43:26.217 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1dd7796b
[DEBUG] 2020-02-17 11:43:26.217 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@702b06fb
[DEBUG] 2020-02-17 11:43:26.218 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@10f19647
[DEBUG] 2020-02-17 11:43:26.218 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10f19647
[DEBUG] 2020-02-17 11:43:26.218 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12d1f1d4
[DEBUG] 2020-02-17 11:43:26.219 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@59d77850
[DEBUG] 2020-02-17 11:43:26.219 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@59d77850
[DEBUG] 2020-02-17 11:43:26.220 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@8a2a6a
[DEBUG] 2020-02-17 11:43:26.220 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8a2a6a
[DEBUG] 2020-02-17 11:43:26.221 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@481e91b6
[DEBUG] 2020-02-17 11:43:26.221 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@10bea4
[DEBUG] 2020-02-17 11:43:26.222 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65c86db8
[DEBUG] 2020-02-17 11:43:26.224 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6c15e8c7
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6c15e8c7
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@282ffbf5
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e104d4b
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55e2fe3c
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45e1aa48
[DEBUG] 2020-02-17 11:43:26.225 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12c60152
[DEBUG] 2020-02-17 11:43:26.226 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e807c54
[DEBUG] 2020-02-17 11:43:26.226 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6cd164a6
[DEBUG] 2020-02-17 11:43:26.226 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@242a209e
[DEBUG] 2020-02-17 11:43:26.249 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-17 11:43:26.250 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-17 11:43:26.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-17 11:43:26.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-17 11:43:26.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-17 11:43:26.253 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-17 11:43:26.254 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-17 11:43:26.256 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-17 11:43:26.256 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-17 11:43:26.257 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-17 11:43:26.257 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-17 11:43:26.258 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-17 11:43:26.258 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-17 11:43:26.258 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-17 11:43:26.263 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BookshelfBansheeTest
[INFO ] 2020-02-17 11:43:26.264 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-17 11:43:26.264 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-17 11:43:26.511 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-17 11:43:26.724 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-17 11:43:26.735 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-17 11:43:26.735 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-17 11:43:26.795 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-17 11:43:26.808 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-17 11:43:26.862 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-17 11:43:26.907 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-17 11:43:26.911 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17947e6d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e17a321]
[DEBUG] 2020-02-17 11:43:26.939 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.bookshelfBanshee.entity.Role]; ignoring
[DEBUG] 2020-02-17 11:43:26.951 [main] AnnotationBinder - Binding entity from annotated class: com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 11:43:26.970 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-17 11:43:26.974 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-17 11:43:26.976 [main] EntityBinder - Bind entity com.bookshelfBanshee.entity.User on table user
[DEBUG] 2020-02-17 11:43:26.998 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 11:43:27.000 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-17 11:43:27.001 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:id]
[DEBUG] 2020-02-17 11:43:27.003 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-17 11:43:27.004 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-17 11:43:27.007 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-17 11:43:27.008 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 11:43:27.008 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-17 11:43:27.008 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:password]
[DEBUG] 2020-02-17 11:43:27.008 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-17 11:43:27.008 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-17 11:43:27.008 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-17 11:43:27.008 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-17 11:43:27.008 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.bookshelfBanshee.entity.User:username]
[DEBUG] 2020-02-17 11:43:27.008 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-17 11:43:27.009 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-17 11:43:27.010 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-17 11:43:27.010 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-17 11:43:27.010 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-17 11:43:27.011 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-02-17 11:43:27.036 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-17 11:43:27.037 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-17 11:43:27.038 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-17 11:43:27.039 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-17 11:43:27.075 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-17 11:43:27.087 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-17 11:43:27.088 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/bookshelfBanshee/target/test-classes:/home/student/IdeaProjects/bookshelfBanshee/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/bookshelfBanshee/target/surefire/surefirebooter3888932075256733417.jar /home/student/IdeaProjects/bookshelfBanshee/target/surefire/surefire17596611533780513108tmp /home/student/IdeaProjects/bookshelfBanshee/target/surefire/surefire_01004964139968448403tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/bookshelfBanshee/target/test-classes:/home/student/IdeaProjects/bookshelfBanshee/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/bookshelfBanshee, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/bookshelfBanshee/target/surefire/surefirebooter3888932075256733417.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-28-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BookshelfBansheeTest, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/IdeaProjects/bookshelfBanshee, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@30db5536, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, idea.version2019.1.4=true, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/BookshelfBansheeTest, java.class.version=55.0}
[DEBUG] 2020-02-17 11:43:27.102 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-17 11:43:27.102 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-17 11:43:27.103 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-17 11:43:27.103 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17947e6d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@628b819d]
[DEBUG] 2020-02-17 11:43:27.145 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.bookshelfBanshee.entity.User] is safe
[DEBUG] 2020-02-17 11:43:27.146 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 11:43:27.157 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.bookshelfBanshee.entity.User] is safe
[DEBUG] 2020-02-17 11:43:27.157 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 11:43:27.343 [main] AbstractEntityPersister - Static SQL for entity: com.bookshelfBanshee.entity.User
[DEBUG] 2020-02-17 11:43:27.343 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-02-17 11:43:27.344 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.password as password2_0_, user_.username as username3_0_ from user user_ where user_.id=?
[DEBUG] 2020-02-17 11:43:27.344 [main] AbstractEntityPersister -  Insert 0: insert into user (password, username, id) values (?, ?, ?)
[DEBUG] 2020-02-17 11:43:27.344 [main] AbstractEntityPersister -  Update 0: update user set password=?, username=? where id=?
[DEBUG] 2020-02-17 11:43:27.344 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-02-17 11:43:27.344 [main] AbstractEntityPersister -  Identity insert: insert into user (password, username) values (?, ?)
[DEBUG] 2020-02-17 11:43:27.363 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48bc2fce]
[DEBUG] 2020-02-17 11:43:27.364 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-17 11:43:27.364 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-17 11:43:27.364 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-17 11:43:27.372 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-17 11:43:27.374 [main] LoadPlanTreePrinter - LoadPlan(entity=com.bookshelfBanshee.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.bookshelfBanshee.entity.User, querySpaceUid=<gen:0>, path=com.bookshelfBanshee.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bookshelfBanshee.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-17 11:43:27.376 [main] EntityLoader - Static select for entity com.bookshelfBanshee.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.376 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c951ada]
[DEBUG] 2020-02-17 11:43:27.376 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-17 11:43:27.376 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-17 11:43:27.376 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-17 11:43:27.376 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-17 11:43:27.377 [main] LoadPlanTreePrinter - LoadPlan(entity=com.bookshelfBanshee.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.bookshelfBanshee.entity.User, querySpaceUid=<gen:0>, path=com.bookshelfBanshee.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.bookshelfBanshee.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-17 11:43:27.377 [main] EntityLoader - Static select for entity com.bookshelfBanshee.entity.User [READ]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.394 [main] Loader - Static select for action ACTION_MERGE on entity com.bookshelfBanshee.entity.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.394 [main] Loader - Static select for action ACTION_REFRESH on entity com.bookshelfBanshee.entity.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.426 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-17 11:43:27.427 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-17 11:43:27.428 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-17 11:43:27.439 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-17 11:43:27.439 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-17 11:43:27.440 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-17 11:43:27.440 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-17 11:43:27.442 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3cb6e0ee
[DEBUG] 2020-02-17 11:43:27.443 [main] SessionFactoryRegistry - Registering SessionFactory: f80c14a4-6d3b-425e-abfe-8f18554e59f0 (<unnamed>)
[DEBUG] 2020-02-17 11:43:27.443 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-17 11:43:27.497 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-17 11:43:27.509 [main] SQL - select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.530 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-17 11:43:27.532 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-17 11:43:27.539 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.540 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.540 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.540 [main] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 11:43:27.540 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.540 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.541 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-17 11:43:27.542 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.bookshelfBanshee.entity.User#1
[DEBUG] 2020-02-17 11:43:27.542 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.551 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-17 11:43:27.551 [main] TransactionImpl - begin
[DEBUG] 2020-02-17 11:43:27.558 [main] TransactionImpl - committing
[DEBUG] 2020-02-17 11:43:27.558 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-17 11:43:27.558 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-17 11:43:27.559 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-02-17 11:43:27.559 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-17 11:43:27.560 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-17 11:43:27.560 [main] EntityPrinter - com.bookshelfBanshee.entity.User{password=notPassword, id=1, username=notAdmin}
[DEBUG] 2020-02-17 11:43:27.563 [main] SQL - delete from user where id=?
[DEBUG] 2020-02-17 11:43:27.571 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.575 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.575 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-02-17 11:43:27.592 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-17 11:43:27.602 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2fbd390
[DEBUG] 2020-02-17 11:43:27.623 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.bookshelfBanshee.entity.User as generatedAlias0
[DEBUG] 2020-02-17 11:43:27.626 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 11:43:27.631 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'bookshelfBanshee'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-17 11:43:27.647 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-17 11:43:27.655 [main] FromElement - FromClause{level=1} : com.bookshelfBanshee.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-17 11:43:27.655 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-17 11:43:27.656 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-17 11:43:27.656 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-02-17 11:43:27.661 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-02-17 11:43:27.661 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-17 11:43:27.661 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=com.bookshelfBanshee.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_0_, user0_.username as username3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.bookshelfBanshee.entity.User}}

[DEBUG] 2020-02-17 11:43:27.662 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 11:43:27.665 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.bookshelfBanshee.entity.User as generatedAlias0
[DEBUG] 2020-02-17 11:43:27.665 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 11:43:27.665 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-17 11:43:27.672 [main] SQL - select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 11:43:27.675 [main] Loader - Result set row: 0
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result set row: 1
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result set row: 2
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result set row: 3
[DEBUG] 2020-02-17 11:43:27.676 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.676 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `password` : value = secure
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `username` : value = user
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `username` : value = user2
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `password` : value = me
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Processing attribute `username` : value = encrypt
[DEBUG] 2020-02-17 11:43:27.677 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.678 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.679 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.736 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-17 11:43:27.737 [main] SQL - select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 11:43:27.740 [main] Loader - Result set row: 0
[DEBUG] 2020-02-17 11:43:27.740 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.741 [main] Loader - Result set row: 1
[DEBUG] 2020-02-17 11:43:27.741 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result set row: 2
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result set row: 3
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result set row: 4
[DEBUG] 2020-02-17 11:43:27.742 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.742 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.742 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.742 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.742 [main] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 11:43:27.742 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-17 11:43:27.743 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Processing attribute `password` : value = secure
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Processing attribute `username` : value = user
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Processing attribute `username` : value = user2
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.744 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Processing attribute `password` : value = me
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Processing attribute `username` : value = encrypt
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.745 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.745 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.802 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-17 11:43:27.803 [main] TransactionImpl - begin
[DEBUG] 2020-02-17 11:43:27.808 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-17 11:43:27.809 [main] SQL - insert into user (password, username) values (?, ?)
[DEBUG] 2020-02-17 11:43:27.815 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2020-02-17 11:43:27.815 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-17 11:43:27.816 [main] TransactionImpl - committing
[DEBUG] 2020-02-17 11:43:27.817 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-17 11:43:27.817 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-17 11:43:27.818 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-17 11:43:27.818 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-17 11:43:27.818 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-17 11:43:27.819 [main] EntityPrinter - com.bookshelfBanshee.entity.User{password=newPassword, id=14, username=newUser}
[DEBUG] 2020-02-17 11:43:27.823 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.829 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.830 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-17 11:43:27.830 [main] SQL - select user0_.id as id1_0_, user0_.password as password2_0_, user0_.username as username3_0_ from user user0_
[DEBUG] 2020-02-17 11:43:27.832 [main] Loader - Result set row: 0
[DEBUG] 2020-02-17 11:43:27.832 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.832 [main] Loader - Result set row: 1
[DEBUG] 2020-02-17 11:43:27.836 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.836 [main] Loader - Result set row: 2
[DEBUG] 2020-02-17 11:43:27.836 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.836 [main] Loader - Result set row: 3
[DEBUG] 2020-02-17 11:43:27.836 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.837 [main] Loader - Result set row: 4
[DEBUG] 2020-02-17 11:43:27.837 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.838 [main] Loader - Result set row: 5
[DEBUG] 2020-02-17 11:43:27.838 [main] Loader - Result row: EntityKey[com.bookshelfBanshee.entity.User#14]
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.838 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#2]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `password` : value = secure
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `username` : value = user
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#3]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `password` : value = password2
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `username` : value = user2
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#4]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Processing attribute `password` : value = me
[DEBUG] 2020-02-17 11:43:27.839 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.840 [main] TwoPhaseLoad - Processing attribute `username` : value = encrypt
[DEBUG] 2020-02-17 11:43:27.840 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.840 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#5]
[DEBUG] 2020-02-17 11:43:27.841 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#14]
[DEBUG] 2020-02-17 11:43:27.841 [main] TwoPhaseLoad - Processing attribute `password` : value = newPassword
[DEBUG] 2020-02-17 11:43:27.841 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.841 [main] TwoPhaseLoad - Processing attribute `username` : value = newUser
[DEBUG] 2020-02-17 11:43:27.841 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.842 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#14]
[DEBUG] 2020-02-17 11:43:27.842 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.882 [main] SQL - select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.887 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-17 11:43:27.887 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.887 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.887 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-17 11:43:27.888 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.bookshelfBanshee.entity.User#1
[DEBUG] 2020-02-17 11:43:27.888 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.942 [main] SQL - select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.945 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-17 11:43:27.945 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Processing attribute `username` : value = notAdmin
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.946 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.946 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-17 11:43:27.946 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.bookshelfBanshee.entity.User#1
[DEBUG] 2020-02-17 11:43:27.946 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.948 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-17 11:43:27.948 [main] TransactionImpl - begin
[DEBUG] 2020-02-17 11:43:27.949 [main] TransactionImpl - committing
[DEBUG] 2020-02-17 11:43:27.949 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-17 11:43:27.949 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-17 11:43:27.950 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-17 11:43:27.950 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-17 11:43:27.950 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-17 11:43:27.950 [main] EntityPrinter - com.bookshelfBanshee.entity.User{password=notPassword, id=1, username=resetUsername}
[DEBUG] 2020-02-17 11:43:27.950 [main] SQL - update user set password=?, username=? where id=?
[DEBUG] 2020-02-17 11:43:27.956 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.964 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-17 11:43:27.965 [main] SQL - select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.username as username3_0_0_ from user user0_ where user0_.id=?
[DEBUG] 2020-02-17 11:43:27.967 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-17 11:43:27.967 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Resolving attributes for [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Processing attribute `password` : value = notPassword
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Processing attribute `username` : value = resetUsername
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-17 11:43:27.967 [main] TwoPhaseLoad - Done materializing entity [com.bookshelfBanshee.entity.User#1]
[DEBUG] 2020-02-17 11:43:27.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-17 11:43:27.967 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.bookshelfBanshee.entity.User#1
[DEBUG] 2020-02-17 11:43:27.967 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
