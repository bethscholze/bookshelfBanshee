#property.filename = logs
property.filename = /home/student/IdeaProjects/bookshelfBanshee/logs
#remove console to stop console outputs in production
appenders = console, file, hibernate

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filename}/bookshelfBanshee.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# creating a rolling file allows it to store itself based on time/size etc
appender.hibernate.type = RollingFile
appender.hibernate.name = HIBFILE
appender.hibernate.fileName=${filename}/hibernate/hibernate.log
appender.hibernate.filePattern=${filename}/hibernate/hibernate_%d{yyyy-MM-dd HH:mm}.log
appender.hibernate.layout.type=PatternLayout
appender.hibernate.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.hibernate.policies.type=Policies

appender.hibernate.policies.time.type=OnStartupTriggeringPolicy
appender.hibernate.strategy.type=DefaultRolloverStrategy

appender.hibernate.strategy.delete.type=Delete
appender.hibernate.strategy.delete.basePath=${filename}/hibernate
appender.hibernate.strategy.delete.maxDepth=1
appender.hibernate.strategy.delete.ifAccumulatedFileCount.type=IfAccumulatedFileCount
appender.hibernate.strategy.delete.ifAccumulatedFileCount.exceeds=5


loggers=file, hibernate
logger.file.name=edu.matc
# set the level of logs that show up in the log file
logger.file.level = debug
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE
# class names to be logged to this file
logger.hibernate.name=org.hibernate
logger.hibernate.level = debug
logger.hibernate.appenderRefs = file
logger.hibernate.appenderRef.file.ref = HIBFILE
# stops it from being logged to the parent logger
logger.hibernate.additivity=false

rootLogger.level = debug
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT